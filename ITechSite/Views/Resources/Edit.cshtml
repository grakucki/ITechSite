@model ITechSite.Models.Resource

@{
    ViewBag.Title = "Zasoby Edycja";
}

<script type="text/javascript" src="~/Scripts/Itech.js"></script>
<script type="text/javascript">
    $(function () {
        CascadingOption("Factory", "WorkProcess", "@(Url.Action("getworkprocessby","Factory"))", "states-loading-progress");
        });
</script>


<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ResourceType.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model=>model.Type)
                @*@Html.DropDownList("Type", null, htmlAttributes: new { @class = "form-control" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastWriteTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.LastWriteTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastWriteTime, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.LastWriteTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.No, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.No, "", new { @class = "text-danger" })
            </div>
        </div>
        @if(Model.Type!=2)
        { 
            <div class="form-group">
                @Html.LabelFor(model => model.Factory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Factory", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Factory, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WorkProcess, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("WorkProcess", null, htmlAttributes: new { @class = "form-control" })     
                    @Html.ValidationMessageFor(model => model.WorkProcess, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Enabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Enabled)
                    @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Keywords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Keywords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Keywords, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Plan informacyjny", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ActionLink("Edytuj", "index", "InformationPlans", new { idR = Model.Id }, new { htmlAttributes = new { @class = "btn btn-default" } })
            </div>
        </div>*@

@if (Model.Type == 1)
{
    <div class="form-group">
        @Html.Label("Ustawienia Stanowiska", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ActionLink("Edytuj", "Workstation", new { idR = Model.Id }, new { htmlAttributes = new { @class = "btn btn-default" } })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Lista modeli na stanowisku", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ActionLink("Edytuj", "Models", new { idR = Model.Id }, new { htmlAttributes = new { @class = "btn btn-default" } })
        </div>
    </div>
}

       <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
