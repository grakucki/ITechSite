@model ITechSite.Models.ResourceListFind
@using PagedList.Mvc;

<script type="text/javascript" src="~/Scripts/Itech.js"></script>
<script type="text/javascript">
    $(function () {
        CascadingOption("Factory", "Department", "@(Url.Action("GetDepartmentsByFactoryId","Factory"))", "states-loading-progress");
        CascadingOption2("Factory", "Department", "WorkProcess", "@(Url.Action("getworkprocessby","Factory"))", "states-loading-progress");
        CascadingOption2("Department", "Factory", "WorkProcess", "@(Url.Action("getworkprocessby","Factory"))", "states-loading-progress");
        });
</script>

@using (Html.BeginForm())
{
    <div class="form-horizontal">

       
        <div class="form-group">
            @Html.LabelFor(model => model.Factory,  htmlAttributes: new { @class = "control-label col-md-2" } )
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Factory, Model.AvailableFactory, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department,  htmlAttributes : new { @class = "control-label col-md-2" } )
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Department, Model.AvailableDepartment, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkProcess, htmlAttributes : new { @class = "control-label col-md-2" } )
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.WorkProcess, Model.AvailableWorkPorcess, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        @if (Model.Allow_ResourceType)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Find_ResourceType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Find_ResourceType, Model.AvailableResourceType, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        }


        <div class="form-group">
            @Html.LabelFor(model => model.Find_Word, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Find_Word, new { htmlAttributes = new { @class = "form-control", placeholder = "Szukana fraza" } })
                <input type="submit" name="FindAction" value="Znajdź" class="btn btn-default-big" />
                <span id="states-loading-progress" style="display: none;">Proszę czekać ...</span>
            </div>
        </div>

        @Html.HiddenFor(model => model.ReturnUrl)
    </div>
}
@*<div>
    Strona @(Model.Resources.PageCount < Model.Resources.PageNumber ? 0 : Model.Resources.PageNumber) z @Model.Resources.PageCount
    @Html.PagedListPager(Model.Resources, page => Url.Action("Index", new { page }))
</div>*@
