@*@model ITechSite.Models.InformationPlan*@
@model ITechSite.Models.InformationPlanModels

@{
    ViewBag.Title = "Dodaj dokumenty";
}

<div class="row form-content">
    @{ViewBag.Title = "Dodaj dokumenty do stanowiska";}
    @if (Model.ResourceModel != null)
    {
        if (Model.ResourceModel.Type == 2)
        {
            ViewBag.Title = "Dodaj dokumenty do modelu";
        }
        else if (Model.ResourceModel.Type == 3)
        {
            ViewBag.Title = "Dodaj dokument do wariantu modelu";
        }
        else
        {
            ViewBag.Title = "Dodaj dokument do planu informacyjnego";
        }
    }
    <div class="col-md-4">
        <h3>@ViewBag.Title</h3>
    </div>
    <div class="col-md-8">
        <div class="form-group ">
            @Html.LabelFor(model => model.IdM, Model.Resource.ResourceType.Type, htmlAttributes: new { @class = "control-label" }):
            <label style="font-size: xx-large">@Model.Resource.Name</label>
            @Html.DisplayFor(m => m.Resource.WorkProcess) @Html.DisplayFor(m => m.Resource.Description)
        </div>
        @if (Model.ResourceModel != null)
        {
            if (Model.ResourceModel.ResourceType.id != 1)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.IdM, Model.ResourceModel.ResourceType.Type, htmlAttributes: new { @class = "" }):
                    <label style="font-size: xx-large ">@Model.ResourceModel.Name</label>
                    @Html.DisplayFor(m => m.ResourceModel.Description)
                </div>
            }
        }
    </div>
    </div>



@Html.Partial("_DocDetailsModal")

<div class="form-inline alert alert-info">
    <h4>Aktualna lista plików:</h4>
    @foreach (var item in Model.IncludeDoc)
    {
        @Html.Partial("_DocPartial", item);
    }

    <div class="form-group file-content">
        @Html.Partial("_DropZonePartial")
    </div>
</div>

<div class="row alert alert-success">
    @using (Html.BeginForm(null, null, FormMethod.Post, new {id="AddDocForm"}))
    {
        @Html.AntiForgeryToken()
            <div class="col-md-6">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.Hidden("idR", null, htmlAttributes: new { @class = "form-control" })

                    @if (Model.ResourceModel != null)
                    {
                        if (Model.ResourceModel.ResourceType.id > 1)
                        {
                            @Html.Hidden("idM", null, htmlAttributes: new { @class = "form-control" })
                        }
                    }
                    
                    <h1>Dodaj dokumenty z bazy dokumentów</h1>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CodeName, "Szukaj dokumentu", htmlAttributes: new { @class = "control-label col-md-4"})
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.CodeName, htmlAttributes: new { @class = "form-control", placeholder = "Szukana fraza" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Kategorie_Id, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("Kategorie_Id", (SelectList)ViewBag.KategoriaList, "*", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.WorkProcess, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("WorkProcess", (SelectList)ViewBag.WorkProcessList, "*", new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.FindAction, htmlAttributes: new { @class = "control-label col-md-4 sr-only" })
                        <div class="col-md-8">
                            <button type="submit" name="FindAction" value="Szukaj" class="form-control btn btn-default btn-block">
                                @Html.SpanGlyphicon("", "glyphicon-search") Szukaj
                            </button>
                        </div>
                    </div>


                    <div class="form-group" hidden="hidden">
                        @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        
            <div class="col-md-6">
                @using ITechSite.Custom
                <button type="submit" value="AddDoc" name="FindAction" class="btn btn-success btn-block">
                    @Html.SpanGlyphicon("", "glyphicon-file")@Html.SpanGlyphicon("", "glyphicon-send") Wyślij dokument
                </button>
                @Html.LabelFor(model => model.IdD, "Dostępne dokumenty", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("IdD", null, htmlAttributes: new { @class = "form-fullH form-control", size = "30" })
            </div>
    
    }
</div>
    <div>
        <hr />
        @Html.ActionLink("Powrót", "Edit2")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
