@*@model ITechSite.Models.Factory*@
@model ITechSite.Areas.Settings.Models.FactoriesEditViewModel
@using ITechSite.Custom;

@{
    ViewBag.Title = "Edit";
}

<h2>Edycja Fabryki</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-inline">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Factory.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Factory.Name,"nazwa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Factory.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Factory.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
}


    <div class="form-horizontal">
        <hr />
        <h4>Projekty</h4>
        <hr />
      
        <div class="form-group">
            @Html.LabelFor(model => model.Factory.Department, "Przypisane projekty", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.Factory.Department.OrderBy(m => m.Name))
                {
                    <p class="alert alert-success col-md-2">
                        @Html.Label("", item.Name, htmlAttributes: new { @class = "form-label" })
                        @*@Html.ActionLink(" usuń", "EditUserRole", new { UserName = Model.User.UserName, RoleName = item, Act = "Remove" }, new { @class = "" })*@
                        @Html.ActionLinkGlyphicon("", "AddProject", "Factories", new { id = Model.Factory.Id, projectId = item.Id, act = "Remove" }, new { @class = "" }, "glyphicon-trash")
                    </p>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableProject, "Dostępne projekty", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var item in Model.AvailableProject.OrderBy(m => m.Name))
                {
                    <p class="alert alert-danger col-md-2">
                        @Html.Label("", item.Name, htmlAttributes: new { @class = "form-label" })<span> </span>
                        @*@Html.ActionLink(" dodaj", "EditUserRole", new { UserName = Model.User.UserName, RoleName = item, Act = "Add" }, new { @class = "" })*@
                        @Html.ActionLinkGlyphicon("", "AddProject", "Factories", new { id = Model.Factory.Id, projectId = item.Id, act = "Add" }, new { @class = "" }, "glyphicon-plus")
                    </p>
                }
            </div>
        </div>
    </div>


<div class="form-horizontal">
    <hr />
    <h4>Procesy robocze</h4>
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Factory.WorkProcess, "Przypisane procesy robocze", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var item in Model.Factory.WorkProcess.OrderBy(m=>m.Name))
            {
                <p class="alert alert-success col-md-2">
                    @Html.Label("", item.Name, htmlAttributes: new { @class = "form-label" })
                    @*@Html.ActionLink(" usuń", "EditUserRole", new { UserName = Model.User.UserName, RoleName = item, Act = "Remove" }, new { @class = "" })*@
                    @Html.ActionLinkGlyphicon("", "AddWorkProccess", "Factories", new { id = Model.Factory.Id, workProcessId = item.Id, act = "Remove" }, new { @class = "" }, "glyphicon-trash")
                </p>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AvailableWorkProcess, "Dostępne Procesy robocze", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var item in Model.AvailableWorkProcess.OrderBy(m => m.Name))
            {
                <p class="alert alert-danger col-md-2">
                    @Html.Label("", item.Name, htmlAttributes: new { @class = "form-label" })<span> </span>
                    @*@Html.ActionLink(" dodaj", "EditUserRole", new { UserName = Model.User.UserName, RoleName = item, Act = "Add" }, new { @class = "" })*@
                    @Html.ActionLinkGlyphicon("", "AddWorkProccess", "Factories", new { id = Model.Factory.Id, workProcessId = item.Id, act = "Add" }, new { @class = "" }, "glyphicon-plus")
                </p>

            }
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Powrót", "Index")
</div>
